<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">


    <context:property-placeholder location="classpath:${DTV_ENV}-prop.properties" />

    <context:component-scan base-package="com.webapptemplate"/>
    <mvc:resources mapping="/static/**" location="/static/" />

    <mvc:annotation-driven validator="validator" />
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"
            />
    <!--<mvc:interceptors>
        <ref bean="localeChangeInterceptor"/>
    </mvc:interceptors>-->

    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="order" value="1" />
        <property name="messageConverters">
            <list>
                <!-- Default converters -->
                <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.FormHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
                <bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter"/>
                <!--<bean class="org.springframework.http.converter.BufferedImageHttpMessageConverter"/>-->
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
            </list>
        </property>
    </bean>

    <!--<bean class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping" >
        <property name="interceptors">
            <list>
                <ref bean="localeChangeInterceptor" />
            </list>
        </property>
    </bean>-->

    <!--<bean id="localeChangeInterceptor"
          class="com.waterlevelwebapp.interceptors.RiverAppLocaleChangeInterceptor">
        <property name="paramName" value="locale" />
    </bean>-->


    <!--<bean id="localeResolver"
          class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
        <property name="defaultLocale" value="fr"/>
    </bean>-->
    <!--
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreResourceNotFound" value="true" />
        <property name="searchSystemEnvironment" value="true" />
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
    </bean>
    -->

    <!-- freemarker config -->
    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/WEB-INF/views/"/>
        <property name="defaultEncoding" value="UTF-8"/>

    </bean>


    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="classpath:text"/>
        <property name="fileEncodings" value="UTF-8" />
        <property name="defaultEncoding" value="UTF-8" />
    </bean>




    <!-- Morphium for MongoDb -->


    <bean id="morphium" name="mongo-primary" depends-on="setMongoHosts" class="de.caluga.morphium.Morphium">
        <constructor-arg ref="morphium-cfg">
        </constructor-arg>
    </bean>

    <bean id="morphium-cfg" name="morphium-cfg" class="de.caluga.morphium.MorphiumConfig">
        <constructor-arg name="db" value="webapptemplate" />
        <constructor-arg name="maxConnections" value="120" />
        <constructor-arg name="globalCacheValidTime" value="60000" />
        <constructor-arg name="housekeepingTimeout" value="3500" />
        <property name="defaultReadPreference" value="NEAREST" />
        <property name="socketTimeout" value="30000"/>
        <property name="connectionTimeout" value="40000"/>
        <property name="maxAutoReconnectTime" value="5000"/>
        <property name="maxWaitTime" value="60000"/>
        <property name="blockingThreadsMultiplier" value="5"/>
        <property name="autoreconnect" value="true"/>
        <property name="writeTimeout" value="90000"/>
        <property name="socketKeepAlive" value="true"/>
        <property name="maximumRetriesWriter" value="2000"/>
        <property name="maximumRetriesBufferedWriter" value="2000"/>
        <property name="maximumRetriesAsyncWriter" value="2000"/>
        <property name="retryWaitTimeAsyncWriter" value="1000"/>
        <property name="retryWaitTimeBufferedWriter" value="1000"/>
        <property name="retryWaitTimeWriter" value="1000"/>
        <property name="retriesOnNetworkError" value="25"/>
        <property name="sleepBetweenNetworkErrorRetries" value="2500"/>
    </bean>
    <bean id="setMongoHosts" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject" ref="morphium-cfg"/>
        <property name="targetMethod" value="setHosts"/>
        <property name="arguments">
            <list>
                <value type="java.lang.String">${mongoHost}</value>

            </list>
        </property>
    </bean>

    <!--
       View resolvers can also be configured with ResourceBundles or XML files. If you need
       different view resolving based on Locale, you have to use the resource bundle resolver.
     -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="cache" value="true"/>
        <property name="prefix" value=""/>
        <property name="suffix" value=""/>
        <property name="exposeSpringMacroHelpers" value="true"/>
        <property name="contentType" value="text/html;charset=UTF-8"/>
    </bean>


    <bean id="propertyPlaceholderConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
        <property name="searchSystemEnvironment" value="true" />
    </bean>

    <bean id="log4jInitialization" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetClass" value="org.springframework.util.Log4jConfigurer"></property>
        <property name="targetMethod" value="initLogging"></property>
        <property name="arguments">
            <list>
                <value>classpath:${DTV_ENV}-log4j.xml</value>
            </list>
        </property>
    </bean>

</beans>